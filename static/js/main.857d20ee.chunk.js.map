{"version":3,"sources":["Datafetching.js","App.js","reportWebVitals.js","index.js"],"names":["Datafetching","useState","posts","setPosts","search","setSearch","useEffect","axios","get","then","res","console","log","data","catch","err","className","type","placeholder","onChange","event","target","value","filter","val","Provider","toLowerCase","includes","map","key","post","CourseId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QA+DeA,MA3Df,WAAyB,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,OAEOF,mBAAS,IAFhB,mBAEbG,EAFa,KAELC,EAFK,KAepB,OAXAC,qBAAU,WACPC,IAAMC,IAAI,oDACRC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZP,EAASO,EAAIG,SAEhBC,OAAM,SAAAC,GACHJ,QAAQC,IAAIG,QAEjB,IAGC,sBAAKC,UAAU,UAAf,UACK,mDACD,qBAAKA,UAAU,SAAf,SACH,8BACG,uBAAOA,UAAU,SAASC,KAAK,OAAOC,YAAY,qBAAqBC,SAAU,SAAAC,GAAUf,EAAUe,EAAMC,OAAOC,UAE9GpB,EAAMqB,QAAO,SAACC,GACV,MAAc,IAAVpB,EACO,KACDoB,EAAIC,SAASC,cAAcC,SAASvB,EAAOsB,gBACjDF,EAAI,iBAAiBE,cAAcC,SAASvB,EAAOsB,gBACnDF,EAAI,eAAeE,cAAcC,SAASvB,EAAOsB,eAC1CF,OAHL,KAKPI,KAAI,SAACJ,EAAKK,GACT,OAAO,oCAAM,uBACb,gDAAoBL,EAAI,kBACxB,4CAAeA,EAAIC,SAAS,uBAA5B,uBACqBD,EAAI,qBAAqB,uBAD9C,mBAEiBA,EAAI,+BAS7B,6BAEQtB,EAAM0B,KAAI,SAAAE,GAAI,OAAG,8BAAuB,+BAAI,uBAAJ,UAAiBA,EAAK,kBACtB,4CAAmBA,EAAKL,SAAS,uBACjC,kDAAyBK,EAAK,6BAA6B,uBAC3D,uCAAcA,EAAI,IAAQ,uBAC1B,qDAA4BA,EAAK,qBAAqB,uBAAK,yBAJ1EA,EAAKC,mB,MCnCnCC,MAXf,WAGE,OACE,qBAAKhB,UAAU,OAAf,SACC,cAAC,EAAD,OCGUiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.857d20ee.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport \"./Datafetching.css\";\nimport axios from 'axios'\n\nfunction Datafetching() {\n    const [posts,setPosts]= useState([])\n    const [search, setSearch]= useState(\"\")\n\n    useEffect(() => {\n       axios.get('https://nut-case.s3.amazonaws.com/coursessc.json')\n        .then(res =>{\n            console.log(res)\n            setPosts(res.data)\n        })\n        .catch(err =>{\n            console.log(err)\n        })\n    }, [])\n\n    return (\n        <div className=\"records\">\n             <h1>Career Labs Task </h1>\n            <div className='search'>\n         <p>\n            <input className=\"button\" type=\"text\" placeholder=\"Search for Courses\" onChange={event => {setSearch(event.target.value)}} ></input>\n            {\n                posts.filter((val)=>{\n                    if (search == \"\"){\n                        return null\n                    }else if (val.Provider.toLowerCase().includes(search.toLowerCase()) ||\n                        val[\"Child Subject\"].toLowerCase().includes(search.toLowerCase()) ||\n                        val[\"Course Name\"].toLowerCase().includes(search.toLowerCase())){\n                        return val\n                    }\n                }).map((val, key)=>{\n                    return <div> <br/>\n                    <h3>Course Name : { val[\"Course Name\"]}</h3>\n                    <p>Provider : {val.Provider}<br/>\n                    Next Session Date : {val[\"Next Session Date\"]}<br/>\n                    Child Subject : {val[\"Child Subject\"]}</p>\n                    </div>\n                })\n            }\n\n            </p></div>\n\n\n\n            <li>\n                {\n                    posts.map(post=> <p key={post.CourseId}><h3><br/>Name : {post[\"Course Name\"]}</h3>\n                                                            <b>Provider : </b>{post.Provider}<br/>\n                                                            <b>University Name: </b>{post[\"Universities/Institutions\"]}<br/>\n                                                            <b>Url : </b>{post[\"Url\"]}<br/>\n                                                            <b>Next Session Date : </b>{post[\"Next Session Date\"]}<br/><br/></p>)\n                }\n                \n                \n            </li>\n        </div>\n    )\n}\n\nexport default Datafetching\n","import React from 'react';\nimport Datafetching from './Datafetching';\nimport \"./App.css\"\n\nfunction App(){\n  \n  \n  return (\n    <div className=\"App1\">\n     <Datafetching />\n     \n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}